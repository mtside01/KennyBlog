<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bootstrap on けにぶろぐ</title>
    <link>https://mtside01.github.io/kennyblog/tags/bootstrap/</link>
    <description>Recent content in Bootstrap on けにぶろぐ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 01 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://mtside01.github.io/kennyblog/tags/bootstrap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScriptを使ったローカルファイルアクセス</title>
      <link>https://mtside01.github.io/kennyblog/posts/2022-05-01_javascript%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mtside01.github.io/kennyblog/posts/2022-05-01_javascript%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9/</guid>
      <description>1. 概要 今回は、JavaScriptを使ったローカルファイルの読み出し/書き込み方法を調べてみました。
2. 作ったもの 2.1. デモアプリ https://mtside01.github.io/FileAccess_sample/
検証のために作ったデモアプリを上記で公開しています。
機能としては、以下を試せます。
 ローカルファイルの読み込み 読み込んだファイルから情報取得 入力した文字列をテキストファイルとして書き出し  2.2. ソースコード https://github.com/mtside01/FileAccess_sample
　3. ポイント（備忘録） 3.1. ローカルファイル読み込み 3.1.1. 読み込み用要素の追加 HTML inputタグを使い、typeをfile指定することでローカルファイルを読み込むことが出来ます。
今回はシンプルに以下のように記載しています。
&amp;lt;input type=&amp;#34;file&amp;#34; id=&amp;#34;uploadFile&amp;#34;&amp;gt; 3.1.2. ファイル読み込みをトリガーにファイル情報取得を行う fileInputという変数を用意し、上記id=&amp;quot;uploadFile&amp;quot;を参照して要素取得を行います。
また、ファイル読み込み時をトリガーにJavaScript関数実行を行いたいため、onchangeイベントを使用しています。
let fileInput = document.getElementById(&amp;#34;uploadFile&amp;#34;); let fileReader = new FileReader(); let fileOutput = document.getElementById(&amp;#34;downloadButton&amp;#34;);  fileInput.onchange = () =&amp;gt; {  let file = fileInput.files[0];  let pathToFile = document.getElementById(&amp;#34;pathToFile&amp;#34;);  let fileName = document.getElementById(&amp;#34;fileName&amp;#34;);  let fileSize = document.</description>
    </item>
    
    <item>
      <title>Among Us Map App</title>
      <link>https://mtside01.github.io/kennyblog/posts/2022-04-17_among-us-map-app/</link>
      <pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mtside01.github.io/kennyblog/posts/2022-04-17_among-us-map-app/</guid>
      <description>目次  目次 1. 作ったもの  1.1. デモ 1.2. ソースコード   2. ポイント（備忘録）  2.1. CDNでBootstrapを導入 2.2. Bootstrap Iconsの導入 2.3. 各メニューアイコン色をマウスオーバーに応じて変更する 2.4. メニューボタンのクリックに応じて画面に表示する画像を切り替える 2.5. ハンバーガーメニューのクリックに応じてメニュー一覧の表示/非表示を切り替える   3. 感想  　1. 作ったもの 1.1. デモ https://mtside01.github.io/AmongUsMap/
上記で公開しています。
Among Usというゲーム用のMapを表示するAppです。（2022/04/17時点で使用可能な全マップ対応）
ちなみにAmong Usとは宇宙空間で行う人狼ゲームのようなもので、僕はここ１年くらいハマっており月１、２回のペースで学生時代の友人と遊んでいます。
http://www.h2int.com/games/among-us/
ゲーム内での自身の行動をメンバに情報共有するために、マップを手元に開いておくことがほぼ必須となるのですが、 いちいち画像検索したりするのが手間だったのでワンクリックでマップを表示できるアプリを作ってみました。
1.2. ソースコード https://github.com/mtside01/AmongUsMap
　2. ポイント（備忘録） 2.1. CDNでBootstrapを導入 僕のブログではおなじみの作業です。
今回のAppではBootstrap Icons、flex-row/flex-columnクラスを使用したかったので導入しています。
&amp;lt;head&amp;gt;  &amp;lt;!-- Required meta tags --&amp;gt;  &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;  &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1&amp;#34;&amp;gt;  &amp;lt;!</description>
    </item>
    
    <item>
      <title>ブルースのコード進行を表示するAppを作った話</title>
      <link>https://mtside01.github.io/kennyblog/posts/2022-03-27_%E3%83%96%E3%83%AB%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E9%80%B2%E8%A1%8C%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bapp%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%9F%E8%A9%B1/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mtside01.github.io/kennyblog/posts/2022-03-27_%E3%83%96%E3%83%AB%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E9%80%B2%E8%A1%8C%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bapp%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%9F%E8%A9%B1/</guid>
      <description>0. 目次  0. 目次 1. 作ったもの  1.1. デモ 1.2. ソースコード   2. ポイント（備忘録）  2.1. 複数のHTML要素に同一の名前を与えて一括変更する  2.1.1. 複数のHTML要素に同一の名前を与える 2.1.2. プルダウンメニューの変更に応じて表示更新用JavaScript関数を呼び出し 2.1.3. HTML要素の更新   2.2. CDNを使ったBootstrapの簡易導入   3. 感想・改善したい点  　1. 作ったもの 1.1. デモ https://mtside01.github.io/BluesCode/
上記で公開しています。
プルダウンメニューから選んだKeyに対応した、ブルースコード進行を表示してくれます。
最近ブルースギターを練習する機会が多く、セッションの時にこういうのがあったら便利だなと思って作ってみました。
1.2. ソースコード https://github.com/mtside01/BluesCode 　2. ポイント（備忘録） 2.1. 複数のHTML要素に同一の名前を与えて一括変更する デモサイトを見て頂ければなんとなくわかると思いますが、 ブルース進行は基本的に3つのコードのみで構成されます。 （トニック、サブドミナント、ドミナントとか言いますが音楽サイトではないので詳細は割愛します。）
それらを表示している要素を、プルダウンメニューに応じて同時に操作したかったため、 今回は以下の手順で実現しています。
2.1.1. 複数のHTML要素に同一の名前を与える 以下あたりがわかりやすいでしょうか？
name=&amp;quot;subDominant&amp;quot;およびname=&amp;quot;root&amp;quot;を与えている要素が複数あることが見て取れると思います。
&amp;lt;form class=&amp;#34;row g-3&amp;#34;&amp;gt;  &amp;lt;div class=&amp;#34;col-md-1&amp;#34;&amp;gt;  &amp;lt;h3 name=&amp;#34;subDominant&amp;#34;&amp;gt;D7&amp;lt;/h3&amp;gt;  &amp;lt;/div&amp;gt;  &amp;lt;div class=&amp;#34;col-md-2&amp;#34;&amp;gt;  &amp;lt;h3 style=&amp;#34;text-align: right&amp;#34;&amp;gt;|&amp;lt;/h3&amp;gt;  &amp;lt;/div&amp;gt;  &amp;lt;div class=&amp;#34;col-md-2&amp;#34;&amp;gt;  &amp;lt;h3 name=&amp;#34;subDominant&amp;#34;&amp;gt;D7&amp;lt;/h3&amp;gt;  &amp;lt;/div&amp;gt;  &amp;lt;div class=&amp;#34;col-md-1&amp;#34;&amp;gt;  &amp;lt;h3 style=&amp;#34;text-align: right&amp;#34;&amp;gt;|&amp;lt;/h3&amp;gt;  &amp;lt;/div&amp;gt;  &amp;lt;div class=&amp;#34;col-md-1&amp;#34;&amp;gt;  &amp;lt;h3 name=&amp;#34;root&amp;#34;&amp;gt;A7&amp;lt;/h3&amp;gt;  &amp;lt;/div&amp;gt;  &amp;lt;div class=&amp;#34;col-md-2&amp;#34;&amp;gt;  &amp;lt;h3 style=&amp;#34;text-align: right&amp;#34;&amp;gt;|&amp;lt;/h3&amp;gt;  &amp;lt;/div&amp;gt;  &amp;lt;div class=&amp;#34;col-md-1&amp;#34;&amp;gt;  &amp;lt;h3 name=&amp;#34;root&amp;#34;&amp;gt;A7&amp;lt;/h3&amp;gt;  &amp;lt;/div&amp;gt; &amp;lt;/form&amp;gt; 2.</description>
    </item>
    
  </channel>
</rss>
